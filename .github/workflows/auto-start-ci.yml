---
name: Auto Start CI

on:
  push:
  schedule:
    # `schedule` event is used instead of `pull_request` because when a
    # `pull_requesst` event is triggered on a PR from a fork, GITHUB_TOKEN will
    # be read-only, and the Action won't have access to any other repository
    # secrets, which it needs to access Jenkins API. Runs every five minutes
    # (fastest the scheduler can run). Five minutes is optimistic, it can take
    # longer to run.
    - cron: "*/5 * * * *"

jobs:
  commitQueue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      # Install dependencies
      - name: Install jq
        run: sudo apt-get install jq -y
      - name: Install Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: Install node-core-utils
        run: npm install -g node-core-utils

      - name: Set variables
        run: |
          echo "::set-env name=REPOSITORY::$(echo ${{ github.repository }} | cut -d/ -f2)"
          echo "::set-env name=OWNER::${{ github.repository_owner }}"

      # Get Pull Requests
      - name: Get Pull Requests
        uses: octokit/graphql-action@v2.x
        id: get_prs_for_ci
        with:
          query: |
            query prs($owner:String!, $repo:String!) {
              repository(owner:$owner, name:$repo) {
                pullRequests(labels: ["request-ci"], states: OPEN, last: 100) {
                  nodes {
                    number
                  }
                }
              }
            }
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPOSITORY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup node-core-utils
        run: |
          ncu-config set username ${{ secrets.JENKINS_USER }}
          ncu-config set token none
          ncu-config set jenkins_token ${{ secrets.JENKINS_TOKEN }}
          ncu-config set owner ${{ env.OWNER }}
          ncu-config set repo ${{ env.REPOSITORY }}

      - name: Start CI
        run: ./tools/start-ci.sh ${{ secrets.GITHUB_TOKEN }} ${{ env.OWNER }} ${{ env.REPOSITORY }} $(echo '${{ steps.get_prs_for_ci.outputs.data }}' | jq '.repository.pullRequests.nodes | map(.number) | .[]')
