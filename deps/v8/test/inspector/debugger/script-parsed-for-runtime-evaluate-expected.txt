Checks that inspector reports script compiled in Runtime.evaluate, Runtime.callFunctionOn and  Runtime.compileScript
Runtime.evaluate with valid expression
{
    method : Debugger.scriptParsed
    params : {
        endColumn : 29
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : true
        hash : A933D880D35072516A27D817C0079F01FEE46E23
        isLiveEdit : false
        isModule : false
        length : 29
        scriptId : <scriptId>
        sourceMapURL : 
        startColumn : 0
        startLine : 0
        url : evaluate.js
    }
}
Runtime.evaluate with syntax error
{
    method : Debugger.scriptFailedToParse
    params : {
        endColumn : 39
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : true
        hash : 81077F73E5B26710D5CE891275FA68AC12493B57
        isModule : false
        length : 39
        scriptId : <scriptId>
        sourceMapURL : 
        startColumn : 0
        startLine : 0
        url : evaluate-syntax-error.js
    }
}
Runtime.callFunctionOn with valid functionDeclaration
{
    method : Debugger.scriptParsed
    params : {
        endColumn : 18
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : false
        hash : 53BA9611A1E9ABE81E93AF82DEC875F94048A807
        isLiveEdit : false
        isModule : false
        length : 18
        scriptId : <scriptId>
        sourceMapURL : 
        startColumn : 0
        startLine : 0
        url : 
    }
}
Runtime.callFunctionOn with syntax error
{
    method : Debugger.scriptFailedToParse
    params : {
        endColumn : 3
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : false
        hash : 9D04D83251E2B7F64CB5762843D429DC872EBA18
        isModule : false
        length : 3
        scriptId : <scriptId>
        sourceMapURL : 
        startColumn : 0
        startLine : 0
        url : 
    }
}
Runtime.compileScript with valid expression
{
    method : Debugger.scriptParsed
    params : {
        endColumn : 4
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : false
        hash : 9D04F7336B76D25A4CB5762843D429DC872EBA18
        isLiveEdit : false
        isModule : false
        length : 4
        scriptId : <scriptId>
        sourceMapURL : 
        startColumn : 0
        startLine : 0
        url : compile-script.js
    }
}
Runtime.compileScript with syntax error
{
    method : Debugger.scriptFailedToParse
    params : {
        endColumn : 1
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : false
        hash : FF746120E4E4F1BA4CB5762843D429DC872EBA18
        isModule : false
        length : 1
        scriptId : <scriptId>
        sourceMapURL : 
        startColumn : 0
        startLine : 0
        url : compile-script-syntax-error.js
    }
}
Runtime.compileScript persistScript: false (should be no script events)
Runtime.evaluate compiled script with stack trace
{
    method : Debugger.scriptParsed
    params : {
        endColumn : 8
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : false
        hash : A2185340102B6713AB58F5467452EC0C872EBA18
        isLiveEdit : false
        isModule : false
        length : 8
        scriptId : <scriptId>
        sourceMapURL : 
        startColumn : 0
        startLine : 0
        url : 
    }
}
{
    method : Debugger.scriptParsed
    params : {
        endColumn : 39
        endLine : 4
        executionContextId : <executionContextId>
        hasSourceURL : true
        hash : 31052EF18E11A850DBC812A6154A27BA713D3521
        isLiveEdit : false
        isModule : false
        length : 86
        scriptId : <scriptId>
        sourceMapURL : 
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 2
                    functionName : fooTop
                    lineNumber : 10
                    scriptId : <scriptId>
                    url : top-frame.js
                }
            ]
        }
        startColumn : 0
        startLine : 0
        url : second-frame.js
    }
}
{
    method : Debugger.scriptParsed
    params : {
        endColumn : 4
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : false
        hash : 9D04F7336B76D25A4CB5762843D429DC872EBA18
        isLiveEdit : false
        isModule : false
        length : 4
        scriptId : <scriptId>
        sourceMapURL : 
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 6
                    functionName : foo
                    lineNumber : 2
                    scriptId : <scriptId>
                    url : second-frame.js
                }
            ]
        }
        startColumn : 0
        startLine : 0
        url : 
    }
}
Runtime.evaluate compile script error with stack trace
{
    method : Debugger.scriptParsed
    params : {
        endColumn : 12
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : false
        hash : 55C8AE40102B6713AB58F546879BAE951E6BF325
        isLiveEdit : false
        isModule : false
        length : 12
        scriptId : <scriptId>
        sourceMapURL : 
        startColumn : 0
        startLine : 0
        url : 
    }
}
{
    method : Debugger.scriptParsed
    params : {
        endColumn : 48
        endLine : 4
        executionContextId : <executionContextId>
        hasSourceURL : true
        hash : 578C87106744016A01ADEA516DC739379190F4E2
        isLiveEdit : false
        isModule : false
        length : 98
        scriptId : <scriptId>
        sourceMapURL : 
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 2
                    functionName : fooTopFail
                    lineNumber : 20
                    scriptId : <scriptId>
                    url : top-frame-fail.js
                }
            ]
        }
        startColumn : 0
        startLine : 0
        url : second-frame-fail.js
    }
}
{
    method : Debugger.scriptFailedToParse
    params : {
        endColumn : 3
        endLine : 0
        executionContextId : <executionContextId>
        hasSourceURL : false
        hash : 9D04F7336C348CA34CB5762843D429DC872EBA18
        isModule : false
        length : 3
        scriptId : <scriptId>
        sourceMapURL : 
        stackTrace : {
            callFrames : [
                [0] : {
                    columnNumber : 6
                    functionName : fooFail
                    lineNumber : 2
                    scriptId : <scriptId>
                    url : second-frame-fail.js
                }
            ]
        }
        startColumn : 0
        startLine : 0
        url : 
    }
}
